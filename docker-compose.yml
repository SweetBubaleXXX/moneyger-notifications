version: "3.8"

services:
  flask:
    build:
      context: .
    command: gunicorn -c gunicorn.conf.py 'app.application:create_app()'
    depends_on:
      - db
      - redis
      - rabbitmq
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_URL: mongodb://db:27017/test
      DATABASE_USER: ${DATABASE_USER:?}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:?}
      CACHE_URL: redis://:${REDIS_PASSWORD:?}@redis:6379/0
      MQ_URL: amqp://${RABBITMQ_USER:?}:${RABBITMQ_PASSWORD:?}@localhost:5672/%2F
    expose:
      - 80

  db:
    image: mongo:7
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DATABASE_USER:?}
      MONGO_INITDB_ROOT_PASSWORD: ${DATABASE_PASSWORD:?}
      MONGODB_DATA_DIR: /data/db
    volumes:
      - database_data:/data/db
    expose:
      - 27017

  redis:
    image: redis:7-alpine
    command: redis-server --loglevel notice --requirepass ${REDIS_PASSWORD:?}
    restart: unless-stopped
    expose:
      - 6379

  rabbitmq:
    image: rabbitmq:3-management-alpine
    hostname: rabbitmq
    restart: unless-stopped
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:?}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD:?}
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 536870912
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    expose:
      - 5672
      - 15672

volumes:
  database_data:
  rabbitmq_data:
